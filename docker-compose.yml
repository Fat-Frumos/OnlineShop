version: "2.3"
services:

  java:
    build: docker/java

  tomcat:
    build: tomcat
    ports:
      - "8080:8080"
    links:
      - postgres

  sftp:
    build: docker/ftp
    container_name: sftp
    ports:
      - "223:22"
    volumes:
      - ./ftp:/opt/data
      - ./ftp:/opt/app
    networks:
      - devops_network
    healthcheck:
      test: ["CMD", "pwd"]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 1s

  python:
    build: docker/python
    container_name: python
    volumes:
      - ./python:/opt/data
      - ./python:/opt/app
    depends_on:
      sftp:
        condition: service_healthy
    environment:
      - ENV=development
    healthcheck:
      test: ["CMD-SHELL", "test -f /opt/app/logfile.log"]
      interval: 3s
      timeout: 5s
      retries: 10
      start_period: 1s

  nginx:
    build: docker/nginx
    container_name: nginx
    ports:
      - "80:883"
    volumes:
      - ./ftp:/opt/app
    depends_on:
      python:
        condition: service_healthy
    environment:
      - ENV=development
    healthcheck:
      test: ["CMD-SHELL", "ls", "-lsa"]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 1s

  postgres:
    container_name: postgres
    image: postgres
    # restart: always
    env_file:
      - db.env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    volumes:
      - database-data:/var/lib/postgresql/data/
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-root}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

networks:
  devops_network:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin: